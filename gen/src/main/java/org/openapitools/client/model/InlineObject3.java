/*
 * API d'authentification
 * Une API d'authentification sécurisée pour les utilisateurs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * InlineObject3
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-24T10:14:40.090517219+01:00[Europe/Paris]")
public class InlineObject3 {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_MANUFACTURER = "manufacturer";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER)
  private String manufacturer;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MAIN_PEPPER = "mainPepper";
  @SerializedName(SERIALIZED_NAME_MAIN_PEPPER)
  private String mainPepper;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_HEAT = "heat";
  @SerializedName(SERIALIZED_NAME_HEAT)
  private BigDecimal heat;


  public InlineObject3 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sauce piquante", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public InlineObject3 manufacturer(String manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MaSauce", value = "")

  public String getManufacturer() {
    return manufacturer;
  }


  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public InlineObject3 description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Une sauce piquante et délicieuse.", value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public InlineObject3 mainPepper(String mainPepper) {
    
    this.mainPepper = mainPepper;
    return this;
  }

   /**
   * Get mainPepper
   * @return mainPepper
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Piment", value = "")

  public String getMainPepper() {
    return mainPepper;
  }


  public void setMainPepper(String mainPepper) {
    this.mainPepper = mainPepper;
  }


  public InlineObject3 imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "http://localhost:3000/images/605c44f99d65f923d8a2a0f3.jpg", value = "")

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public InlineObject3 heat(BigDecimal heat) {
    
    this.heat = heat;
    return this;
  }

   /**
   * Get heat
   * @return heat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8", value = "")

  public BigDecimal getHeat() {
    return heat;
  }


  public void setHeat(BigDecimal heat) {
    this.heat = heat;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject3 inlineObject3 = (InlineObject3) o;
    return Objects.equals(this.name, inlineObject3.name) &&
        Objects.equals(this.manufacturer, inlineObject3.manufacturer) &&
        Objects.equals(this.description, inlineObject3.description) &&
        Objects.equals(this.mainPepper, inlineObject3.mainPepper) &&
        Objects.equals(this.imageUrl, inlineObject3.imageUrl) &&
        Objects.equals(this.heat, inlineObject3.heat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, manufacturer, description, mainPepper, imageUrl, heat);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject3 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    mainPepper: ").append(toIndentedString(mainPepper)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    heat: ").append(toIndentedString(heat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

